#include <bits/stdc++.h>
#define mod 100000007
using namespace std;

int removeDuplicates(vector<int> &nums)
{
  int i = 0, j = i + 1;
  while (i < nums.size() && j < nums.size())
  {
    // if elements are not same then insert jth element at i+1 index
    // and increment i and j
    if (nums[i] != nums[j])
    {
      nums[i + 1] = nums[j];
      i++;
      j++;
    }
    // if elements are same just increment j
    else
    {
      j++;
    }
  }
  // return i+1, till here we will find unique elements
  return i + 1;
}

int main()
{
  /*
    Remove Duplicates from a sorted Array
  */

  // Remove the whole #ifndef part before submitting

#ifndef ONLINE_JUDGE

  // For getting input from input.txt file
  freopen("input.txt", "r", stdin);
  // Printing the Output to output.txt file
  freopen("output.txt", "w", stdout);
#endif

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  /*

  ?METHOD 1

  we will initialize two variables i=0 and j=1, for i<n && j<n, if arr[i]!=arr[j]
  then we will insert arr[i+1]=arr[j] and increment i and j. otherwise we will just increment
  j. after whole traversal of array we will have k unique elements.
  where k=i+1.
  so we will return i+1;


  ?METHOD 2

  Reference Ques:
  */
  int n;
  cin >> n;
  vector<int> nums(n);
  for (int j = 0; j < n; j++)
  {
    cin >> nums[j];
  }
  int res = removeDuplicates(nums);
  cout << res;
  return 0;
}