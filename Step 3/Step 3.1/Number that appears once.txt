#include <bits/stdc++.h>
#define mod 100000007
using namespace std;

int appearsOnce(vector<int> &nums)
{
  // initializing ans with 0
  int ans = 0;
  // xoring ans with nums array, evey number which occurs twice
  // will eventually becomes zero and we are left with only
  // unique element
  for (int i = 0; i < nums.size(); i++)
  {
    ans ^= nums[i];
  }
  // returning ans
  return ans;
}

int main()
{
  /*
    find number which occurs once others occur twice
  */

  // Remove the whole #ifndef part before submitting

#ifndef ONLINE_JUDGE

  // For getting input from input.txt file
  freopen("input.txt", "r", stdin);
  // Printing the Output to output.txt file
  freopen("output.txt", "w", stdout);
#endif

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  /*

  ?METHOD 1

  we will return xor of all elements, numbers appearing twice
  will cancel out. Returing only unique element


  ?METHOD 2

  Reference Ques:
  */
  int n;
  cin >> n;
  vector<int> nums(n);
  for (int j = 0; j < n; j++)
  {
    cin >> nums[j];
  }
  int res = appearsOnce(nums);
  cout << res;
  return 0;
}